// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configurations;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(BuchContext))]
    partial class BuchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.Benutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BENUTZER_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Benutzername")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BENUTZER_NAME");

                    b.Property<string>("EmailAdresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("EMAIL_ADDRESSE");

                    b.Property<string>("Geburtstag")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("GEBURTSTAG");

                    b.Property<string>("Passwort")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PASSWORT");

                    b.Property<byte[]>("Profilbild")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("PROFIL_BILD");

                    b.HasKey("Id");

                    b.ToTable("BENUTZER");
                });

            modelBuilder.Entity("Model.Entities.Buch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BUCH_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("AUTOR");

                    b.Property<string>("CoverURL")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("COVER_URL");

                    b.Property<string>("Erster_Satz")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ERSTER_SATZ");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ISBN");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TITEL");

                    b.HasKey("Id");

                    b.ToTable("BUECHER");
                });

            modelBuilder.Entity("Model.Entities.BuchBeziehung_JT", b =>
                {
                    b.Property<int>("BuchId")
                        .HasColumnType("int")
                        .HasColumnName("BUCH_ID");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int")
                        .HasColumnName("BENUTZER_ID");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("Anfangsdatum")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ANFANGSDATUM");

                    b.HasKey("BuchId", "BenutzerId", "Status");

                    b.HasIndex("BenutzerId");

                    b.ToTable("BUCHBEZIEHUNG_JT");
                });

            modelBuilder.Entity("Model.Entities.BuchBeziehung_JT", b =>
                {
                    b.HasOne("Model.Entities.Benutzer", "Benutzer")
                        .WithMany()
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Buch", "Buch")
                        .WithMany()
                        .HasForeignKey("BuchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");

                    b.Navigation("Buch");
                });
#pragma warning restore 612, 618
        }
    }
}
